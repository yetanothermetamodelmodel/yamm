/*
 * generated by Xtext 2.25.0
 */
grammar DebugInternalXYamm;

// Rule YModel
ruleYModel:
	'yModel'
	ruleEString
	'{'
	'yClazz'
	'{'
	(
		','
		ruleYClass
		(
			','
			ruleYClass
		)*
	)?
	'}'
	'yEnumerations'
	'{'
	(
		','
		ruleYEnumeration
		(
			','
			ruleYEnumeration
		)*
	)?
	'}'
	'yPackages'
	'{'
	(
		','
		ruleYPackage
		(
			','
			ruleYPackage
		)*
	)?
	'}'
	(
		'yObjects'
		'{'
		ruleEObject
		(
			','
			ruleEObject
		)*
		'}'
	)?
	(
		'ySharedEdges'
		'{'
		ruleYSharedEdge
		(
			','
			ruleYSharedEdge
		)*
		'}'
	)?
	(
		'yCompositeEdges'
		'{'
		ruleYCompositeEdge
		(
			','
			ruleYCompositeEdge
		)*
		'}'
	)?
	'}'
;

// Rule XBlockExpression
ruleXBlockExpression:
	'{'
	(
		ruleXExpression
		';'
	)*
	'}'
;

// Rule XFeatureCall
ruleXFeatureCall:
	ruleIdOrSuper
	(
		(
			('('
			)=>
			'('
		)
		(
			ruleXExpression
			(
				','
				ruleXExpression
			)*
		)?
		')'
		(
			(
				('[')=>
				'['
			)
			ruleEString2
			']'
		)?
	)?
;

// Rule XMemberFeatureCall
ruleXMemberFeatureCall:
	ruleXPrimaryExpression
	(
		(
			('.'
			ruleFeatureCallID
			ruleOpSingleAssign
			)=>
			'.'
			ruleFeatureCallID
			ruleOpSingleAssign
		)
		ruleXAssignment
		    |
		(
			('.'
			)=>
			'.'
		)
		ruleIdOrSuper
		(
			(
				('('
				)=>
				'('
			)
			(
				ruleXExpression
				(
					','
					ruleXExpression
				)*
			)?
			')'
			(
				(
					('[')=>
					'['
				)
				ruleEString2
				']'
			)?
		)?
	)*
;

// Rule XPrimaryExpression
ruleXPrimaryExpression:
	(
		ruleYPrintExpression
		    |
		ruleYSetReturnValue
		    |
		ruleXBlockExpression
		    |
		ruleXConstructorCall
		    |
		ruleXFeatureCall
		    |
		ruleXLiteral
		    |
		ruleXParenthesizedExpression
		    |
		ruleYColorDFAObject
		    |
		ruleYGetInstances
		    |
		ruleYGetLayerInformation
		    |
		ruleYGetObjectManagement
		    |
		ruleYLoadModel
		    |
		ruleYTimeStep
		    |
		ruleYObserverAddValue
	)
;

// Rule XAssignment
ruleXAssignment:
	(
		ruleFeatureCallID
		ruleOpSingleAssign
		ruleXAssignment
		    |
		ruleYCreateInstanceExpression
		    |
		ruleYGetInstancesOfExpression
		    |
		ruleXOrExpression
		(
			(
				(ruleOpMultiAssign
				)=>
				ruleOpMultiAssign
			)
			ruleXAssignment
		)?
	)
;

// Rule YGetInstancesOfExpression
ruleYGetInstancesOfExpression:
	'getInstancesOf'
	'('
	ruleEString2
	?
	')'
;

// Rule YObserverAddValue
ruleYObserverAddValue:
	'observerAddValue('
	(
		ruleXExpression
		(
			','
			ruleXExpression
		)*
	)?
	')'
;

// Rule YCreateInstanceExpression
ruleYCreateInstanceExpression:
	'createInstance('
	ruleEString2
	?
	')'
;

// Rule YLoadModel
ruleYLoadModel:
	'loadModel'
	'('
	ruleXExpression
	')'
;

// Rule YTimeStep
ruleYTimeStep:
	'yTimeStep'
;

// Rule YGetLayerInformation
ruleYGetLayerInformation:
	'getLayerInformation'
	'('
	(
		ruleXExpression
		(
			','
			ruleXExpression
		)*
	)?
	')'
;

// Rule YGetObjectManagement
ruleYGetObjectManagement:
	'getObjectManagement'
	'('
	(
		ruleXExpression
		(
			','
			ruleXExpression
		)*
	)?
	')'
;

// Rule YPrintExpression
ruleYPrintExpression:
	'Print('
	ruleXExpression
	')'
;

// Rule YSetReturnValue
ruleYSetReturnValue:
	'setReturnValue'
	'('
	ruleXExpression
	')'
;

// Rule YColorDFAObject
ruleYColorDFAObject:
	'colorDFAObject('
	ruleXExpression
	')'
;

// Rule YGetInstances
ruleYGetInstances:
	'getInstances'
	'('
	ruleXExpression
	(
		','
		ruleXExpression
	)*
	')'
;

// Rule YElement
ruleYElement:
	(
		ruleYClass
		    |
		ruleYComment
		    |
		ruleYConstraint
		    |
		ruleYElementImport
		    |
		ruleYEnumeration
		    |
		ruleYEnumerationLiteral
		    |
		ruleYOperation
		    |
		ruleYPackage
		    |
		ruleYPackageImport
		    |
		ruleYParameter
		    |
		ruleYPrimitiveType
		    |
		ruleYProperty
		    |
		ruleYFinalState
		    |
		ruleYPseudostate
		    |
		ruleYStateMachine
		    |
		ruleYTransition
		    |
		ruleYTrAttachment
		    |
		ruleYState
	)
;

// Rule YNamedElement
ruleYNamedElement:
	(
		ruleYClass
		    |
		ruleYConstraint
		    |
		ruleYEnumeration
		    |
		ruleYEnumerationLiteral
		    |
		ruleYOperation
		    |
		ruleYPackage
		    |
		ruleYParameter
		    |
		ruleYPrimitiveType
		    |
		ruleYProperty
		    |
		ruleYFinalState
		    |
		ruleYPseudostate
		    |
		ruleYStateMachine
		    |
		ruleYTransition
		    |
		ruleYTrAttachment
		    |
		ruleYState
	)
;

// Rule YPackageableElement
ruleYPackageableElement:
	(
		ruleYClass
		    |
		ruleYConstraint
		    |
		ruleYEnumeration
		    |
		ruleYEnumerationLiteral
		    |
		ruleYPackage
		    |
		ruleYPrimitiveType
	)
;

// Rule YVertex
ruleYVertex:
	(
		ruleYFinalState
		    |
		ruleYPseudostate
		    |
		ruleYState
	)
;

// Rule EString
ruleEString:
	(
		RULE_STRING
		    |
		RULE_ID
		    |
		'yClass'
	)
;

// Rule EString2
ruleEString2:
	RULE_ID+
	(
		'.'+
		RULE_ID
	)*
;

// Rule ValidID
ruleValidID:
	(
		RULE_ID
		    |
		'yClass'
	)
;

// Rule YClass
ruleYClass:
	'yIsAbstract'
	?
	'yClass'
	ruleEString
	'{'
	(
		'yName'
		ruleEString
	)?
	(
		'yQualifiedName'
		ruleEString2
	)?
	'yObserveQueue'
	?
	(
		'yPackage'
		ruleEString2
	)?
	'ySuperClass'
	'('
	(
		ruleEString2
		(
			','
			ruleEString2
		)*
	)?
	')'
	'yOwnedAttribute'
	'{'
	(
		','
		ruleYProperty
		(
			','
			ruleYProperty
		)*
	)?
	'}'
	'yOwnedOperation'
	'{'
	(
		','
		ruleYOperation
		(
			','
			ruleYOperation
		)*
	)?
	'}'
	'}'
;

// Rule YEnumeration
ruleYEnumeration:
	'yIsAbstract'
	?
	'yEnumeration'
	ruleEString
	'{'
	(
		'yName'
		ruleEString
	)?
	(
		'yQualifiedName'
		ruleEString2
	)?
	(
		'yMember'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yElementImport'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yImportedMember'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yPackageImport'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yAttribute'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yFeature'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yGeneral'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yInheritedMember'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yPackage'
		ruleEString
	)?
	(
		'yOwnedComment'
		ruleYComment
	)?
	(
		'yOwnedElement'
		'{'
		ruleYElement
		(
			','
			ruleYElement
		)*
		'}'
	)?
	(
		'yOwnedMember'
		'{'
		ruleYNamedElement
		(
			','
			ruleYNamedElement
		)*
		'}'
	)?
	(
		'yOwnedRule'
		'{'
		ruleYConstraint
		(
			','
			ruleYConstraint
		)*
		'}'
	)?
	'yOwnedLiteral'
	'{'
	(
		','
		ruleYEnumerationLiteral
		(
			','
			ruleYEnumerationLiteral
		)*
	)?
	'}'
	'}'
;

// Rule YPackage
ruleYPackage:
	'yPackage'
	ruleEString
	'{'
	(
		'yName'
		ruleEString
	)?
	(
		'yQualifiedName'
		ruleEString
	)?
	(
		'yPackage'
		ruleEString2
	)?
	'yOwnedMemberPackage'
	'{'
	(
		','
		ruleYPackageableElement
		(
			','
			ruleYPackageableElement
		)*
	)?
	'}'
	'}'
;

// Rule EObject
ruleEObject:
	'yEObject'
;

// Rule YSharedEdge
ruleYSharedEdge:
	'ySharedEdge'
	ruleEString
	'{'
	(
		'yDescription'
		ruleEString
	)?
	'ySource'
	ruleEString
	'yTarget'
	ruleEString
	'}'
;

// Rule YCompositeEdge
ruleYCompositeEdge:
	'yCompositeEdge'
	ruleEString
	'{'
	(
		'yDescription'
		ruleEString
	)?
	'ySource'
	ruleEString
	'yTarget'
	ruleEString
	'}'
;

// Rule YComment
ruleYComment:
	'yComment'
	ruleEString
	'{'
	'yBody'
	ruleEString
	(
		'yAnnotatedElement'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yOwnedComment'
		ruleYComment
	)?
	(
		'yOwnedElement'
		'{'
		ruleYElement
		(
			','
			ruleYElement
		)*
		'}'
	)?
	'}'
;

// Rule YConstraint
ruleYConstraint:
	'yConstraint'
	ruleEString
	'{'
	(
		'yName'
		ruleEString
	)?
	(
		'yQualifiedName'
		ruleEString
	)?
	(
		'yConstrainedElement'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yOwnedComment'
		ruleYComment
	)?
	(
		'yOwnedElement'
		'{'
		ruleYElement
		(
			','
			ruleYElement
		)*
		'}'
	)?
	(
		'ySpecification'
		ruleYOperation
	)?
	'}'
;

// Rule YProperty
ruleYProperty:
	'yIsOrdered'
	?
	'yIsDerived'
	?
	'yIsDerivedUnion'
	?
	'yAssociation'
	?
	'yIsUnique'
	?
	'yProperty'
	ruleEString
	'{'
	(
		'yClazz'
		RULE_ID
	)?
	(
		'yVisibility'
		ruleYVisibilityKind
	)?
	(
		'yName'
		ruleEString
	)?
	(
		'yQualifiedName'
		ruleEString
	)?
	'yStatic'
	?
	(
		'yLower'
		ruleEInt
	)?
	(
		'yUpper'
		ruleEInt
	)?
	(
		'yAggregation'
		ruleYAggregationKind
	)?
	(
		'yDefaultValue'
		ruleEString
	)?
	(
		'yDescription'
		ruleEString
	)?
	(
		'yInvariant'
		ruleEString
	)?
	(
		'yFeaturingClassifier'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yType'
		ruleEString2
	)?
	(
		'ySubsettedProperty'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yOpposite'
		ruleEString2
	)?
	'yObserve'
	?
	(
		'yOwnedComment'
		ruleYComment
	)?
	(
		'yOwnedElement'
		'{'
		ruleYElement
		(
			','
			ruleYElement
		)*
		'}'
	)?
	'}'
;

// Rule YOperation
ruleYOperation:
	'yOperation'
	ruleEString
	'{'
	(
		'yName'
		ruleEString
	)?
	(
		'yClazz'
		RULE_ID
	)?
	(
		'yReturnType'
		ruleEString2
	)?
	(
		'yLower'
		ruleEInt
	)?
	(
		'yUpper'
		ruleEInt
	)?
	'yOwnedParameter'
	'{'
	(
		','
		ruleYParameter
		(
			','
			ruleYParameter
		)*
	)?
	'}'
	(
		'yStateMachine'
		ruleYStateMachine
	)?
	'yStateMachineEnd'
	'}'
;

// Rule YElementImport
ruleYElementImport:
	'yElementImport'
	ruleEString
	'{'
	'yImportedElement'
	ruleEString
	'yImportingNamespace'
	ruleEString
	(
		'yOwnedComment'
		ruleYComment
	)?
	(
		'yOwnedElement'
		'{'
		ruleYElement
		(
			','
			ruleYElement
		)*
		'}'
	)?
	'}'
;

// Rule YEnumerationLiteral
ruleYEnumerationLiteral:
	'yEnumerationLiteral'
	ruleEString
	'{'
	(
		'yName'
		ruleEString
	)?
	(
		'yQualifiedName'
		ruleEString
	)?
	(
		'yOwnedComment'
		ruleYComment
	)?
	(
		'yOwnedElement'
		'{'
		ruleYElement
		(
			','
			ruleYElement
		)*
		'}'
	)?
	'}'
;

// Rule YPackageImport
ruleYPackageImport:
	'yPackageImport'
	ruleEString
	'{'
	'yImportedPackage'
	ruleEString
	'yImportingNamespace'
	ruleEString
	(
		'yOwnedComment'
		ruleYComment
	)?
	(
		'yOwnedElement'
		'{'
		ruleYElement
		(
			','
			ruleYElement
		)*
		'}'
	)?
	'}'
;

// Rule YParameter
ruleYParameter:
	'yIsOrdered'
	?
	'yIsUnique'
	?
	'yUpperboundWildcard'
	?
	'yParameter'
	ruleEString
	'{'
	(
		'yLower'
		ruleEInt
	)?
	(
		'yUpper'
		ruleEInt
	)?
	(
		'yName'
		ruleEString
	)?
	(
		'yQualifiedName'
		ruleEString
	)?
	(
		'yDirection'
		ruleParameterDirectionKind
	)?
	(
		'yDefaultValue'
		ruleEString
	)?
	(
		'yDescription'
		ruleEString
	)?
	(
		'yType'
		ruleEString2
	)?
	'}'
;

// Rule YPrimitiveType
ruleYPrimitiveType:
	'yIsAbstract'
	'yPrimitiveType'
	ruleEString
	'{'
	(
		'yName'
		ruleEString
	)?
	(
		'yQualifiedName'
		ruleEString
	)?
	(
		'yMember'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yElementImport'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yImportedMember'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yPackageImport'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yAttribute'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yFeature'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yGeneral'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yInheritedMember'
		'('
		ruleEString
		(
			','
			ruleEString
		)*
		')'
	)?
	(
		'yPackage'
		ruleEString
	)?
	(
		'yOwnedComment'
		ruleYComment
	)?
	(
		'yOwnedElement'
		'{'
		ruleYElement
		(
			','
			ruleYElement
		)*
		'}'
	)?
	(
		'yOwnedMember'
		'{'
		ruleYNamedElement
		(
			','
			ruleYNamedElement
		)*
		'}'
	)?
	(
		'yOwnedRule'
		'{'
		ruleYConstraint
		(
			','
			ruleYConstraint
		)*
		'}'
	)?
	'}'
;

// Rule YFinalState
ruleYFinalState:
	'yFinalState'
	ruleEString
	'{'
	(
		'yName'
		ruleEString
	)?
	(
		'yQualifiedName'
		ruleEString
	)?
	'yOutgoing'
	'('
	(
		ruleEString
		(
			','
			ruleEString
		)*
	)?
	')'
	'yIncoming'
	'('
	(
		ruleEString
		(
			','
			ruleEString
		)*
	)?
	')'
	'}'
;

// Rule YPseudostate
ruleYPseudostate:
	'yPseudostate'
	ruleEString
	'{'
	(
		'yName'
		ruleEString
	)?
	(
		'yQualifiedName'
		ruleEString
	)?
	'yOutgoing'
	'('
	(
		ruleEString
		(
			','
			ruleEString
		)*
	)?
	')'
	'yIncoming'
	'('
	(
		ruleEString
		(
			','
			ruleEString
		)*
	)?
	')'
	'}'
;

// Rule YStateMachine
ruleYStateMachine:
	'yStateMachine'
	ruleEString
	'{'
	'yInitialActive'
	?
	'yDesInitializer'
	?
	(
		'yName'
		ruleEString
	)?
	(
		'yQualifiedName'
		ruleEString
	)?
	'yRtc'
	ruleRunToCompletion
	(
		'yMaxEffectsToBeProcessed'
		ruleEInt
	)?
	(
		'yCalledOperation'
		ruleEString
	)?
	(
		'yOwnedComment'
		ruleYComment
	)?
	(
		'yOwnedElement'
		'{'
		ruleYElement
		(
			','
			ruleYElement
		)*
		'}'
	)?
	'yTransition'
	'{'
	(
		','
		ruleYTransition
		(
			','
			ruleYTransition
		)*
	)?
	'}'
	'ySubvertex'
	'{'
	(
		','
		ruleYVertex
		(
			','
			ruleYVertex
		)*
	)?
	'}'
	'yTrAttach'
	'{'
	(
		','
		ruleYTrAttachment
		(
			','
			ruleYTrAttachment
		)*
	)?
	'}'
	'}'
;

// Rule YTransition
ruleYTransition:
	'yTransition'
	ruleEString
	'{'
	(
		'yName'
		ruleEString
	)?
	(
		'yQualifiedName'
		ruleEString
	)?
	'ySource'
	ruleEString
	'yTarget'
	ruleEString
	(
		'yAttachment'
		ruleEString
	)?
	(
		'yOwnedComment'
		ruleYComment
	)?
	(
		'yOwnedElement'
		'{'
		ruleYElement
		(
			','
			ruleYElement
		)*
		'}'
	)?
	'}'
;

// Rule YTrAttachment
ruleYTrAttachment:
	'yTrAttachment'
	ruleEString
	'{'
	(
		'yName'
		ruleEString
	)?
	(
		'yQualifiedName'
		ruleEString
	)?
	'yGuard'
	ruleXExpression
	(
		'yTransition'
		ruleEString
	)?
	'yEffects'
	'{'
	(
		','
		ruleYEffect
		(
			','
			ruleYEffect
		)*
	)?
	'}'
	'}'
;

// Rule YState
ruleYState:
	'yState'
	ruleEString
	'{'
	(
		'yName'
		ruleEString
	)?
	(
		'yQualifiedName'
		ruleEString
	)?
	'yOutgoing'
	'('
	(
		ruleEString
		(
			','
			ruleEString
		)*
	)?
	')'
	'yIncoming'
	'('
	(
		ruleEString
		(
			','
			ruleEString
		)*
	)?
	')'
	'}'
;

// Rule EInt
ruleEInt:
	'-'?
	RULE_INT
;

// Rule YEffect
ruleYEffect:
	'yEffect'
	'yBreakpoint'
	?
	ruleEString
	'{'
	ruleXBlockExpression
	?
	'}'
;

// Rule XExpression
ruleXExpression:
	ruleXAssignment
;

// Rule OpSingleAssign
ruleOpSingleAssign:
	'='
;

// Rule OpMultiAssign
ruleOpMultiAssign:
	(
		'+='
		    |
		'-='
		    |
		'*='
		    |
		'/='
		    |
		'%='
		    |
		'<'
		'<'
		'='
		    |
		'>'
		'>'?
		'>='
	)
;

// Rule XOrExpression
ruleXOrExpression:
	ruleXAndExpression
	(
		(
			(ruleOpOr
			)=>
			ruleOpOr
		)
		ruleXAndExpression
	)*
;

// Rule OpOr
ruleOpOr:
	'||'
;

// Rule XAndExpression
ruleXAndExpression:
	ruleXEqualityExpression
	(
		(
			(ruleOpAnd
			)=>
			ruleOpAnd
		)
		ruleXEqualityExpression
	)*
;

// Rule OpAnd
ruleOpAnd:
	'&&'
;

// Rule XEqualityExpression
ruleXEqualityExpression:
	ruleXRelationalExpression
	(
		(
			(ruleOpEquality
			)=>
			ruleOpEquality
		)
		ruleXRelationalExpression
	)*
;

// Rule OpEquality
ruleOpEquality:
	(
		'=='
		    |
		'!='
		    |
		'==='
		    |
		'!=='
	)
;

// Rule XRelationalExpression
ruleXRelationalExpression:
	ruleXOtherOperatorExpression
	(
		(
			('instanceof'
			)=>
			'instanceof'
		)
		ruleJvmTypeReference
		    |
		(
			(ruleOpCompare
			)=>
			ruleOpCompare
		)
		ruleXOtherOperatorExpression
	)*
;

// Rule OpCompare
ruleOpCompare:
	(
		'>='
		    |
		'<'
		'='
		    |
		'>'
		    |
		'<'
	)
;

// Rule XOtherOperatorExpression
ruleXOtherOperatorExpression:
	ruleXAdditiveExpression
	(
		(
			(ruleOpOther
			)=>
			ruleOpOther
		)
		ruleXAdditiveExpression
	)*
;

// Rule OpOther
ruleOpOther:
	(
		'->'
		    |
		'..<'
		    |
		'>'
		'..'
		    |
		'..'
		    |
		'=>'
		    |
		'>'
		(
			(
				('>'
				'>'
				)=>
				'>'
				'>'
			)
			    |
			'>'
		)
		    |
		'<'
		(
			(
				('<'
				'<'
				)=>
				'<'
				'<'
			)
			    |
			'<'
			    |
			'=>'
		)
		    |
		'<>'
		    |
		'?:'
	)
;

// Rule XAdditiveExpression
ruleXAdditiveExpression:
	ruleXMultiplicativeExpression
	(
		(
			(ruleOpAdd
			)=>
			ruleOpAdd
		)
		ruleXMultiplicativeExpression
	)*
;

// Rule OpAdd
ruleOpAdd:
	(
		'+'
		    |
		'-'
	)
;

// Rule XMultiplicativeExpression
ruleXMultiplicativeExpression:
	ruleXUnaryOperation
	(
		(
			(ruleOpMulti
			)=>
			ruleOpMulti
		)
		ruleXUnaryOperation
	)*
;

// Rule OpMulti
ruleOpMulti:
	(
		'*'
		    |
		'**'
		    |
		'/'
		    |
		'%'
	)
;

// Rule XUnaryOperation
ruleXUnaryOperation:
	(
		ruleOpUnary
		ruleXUnaryOperation
		    |
		ruleXCastedExpression
	)
;

// Rule OpUnary
ruleOpUnary:
	(
		'!'
		    |
		'-'
		    |
		'+'
	)
;

// Rule XCastedExpression
ruleXCastedExpression:
	ruleXPostfixOperation
	(
		(
			('as'
			)=>
			'as'
		)
		ruleJvmTypeReference
	)*
;

// Rule XPostfixOperation
ruleXPostfixOperation:
	ruleXMemberFeatureCall
	(
		(ruleOpPostfix
		)=>
		ruleOpPostfix
	)?
;

// Rule OpPostfix
ruleOpPostfix:
	(
		'++'
		    |
		'--'
	)
;

// Rule XLiteral
ruleXLiteral:
	(
		ruleXCollectionLiteral
		    |
		(
			('['
			)=>
			ruleXClosure
		)
		    |
		ruleXBooleanLiteral
		    |
		ruleXNumberLiteral
		    |
		ruleXNullLiteral
		    |
		ruleXStringLiteral
		    |
		ruleXTypeLiteral
	)
;

// Rule XCollectionLiteral
ruleXCollectionLiteral:
	(
		ruleXSetLiteral
		    |
		ruleXListLiteral
	)
;

// Rule XSetLiteral
ruleXSetLiteral:
	'#'
	'{'
	(
		ruleXExpression
		(
			','
			ruleXExpression
		)*
	)?
	'}'
;

// Rule XListLiteral
ruleXListLiteral:
	'#'
	'['
	(
		ruleXExpression
		(
			','
			ruleXExpression
		)*
	)?
	']'
;

// Rule XClosure
ruleXClosure:
	(
		('['
		)=>
		'['
	)
	(
		((
			ruleJvmFormalParameter
			(
				','
				ruleJvmFormalParameter
			)*
		)?
		'|'
		)=>
		(
			ruleJvmFormalParameter
			(
				','
				ruleJvmFormalParameter
			)*
		)?
		'|'
	)?
	ruleXExpressionInClosure
	']'
;

// Rule XExpressionInClosure
ruleXExpressionInClosure:
	(
		ruleXExpressionOrVarDeclaration
		';'?
	)*
;

// Rule XShortClosure
ruleXShortClosure:
	(
		((
			ruleJvmFormalParameter
			(
				','
				ruleJvmFormalParameter
			)*
		)?
		'|'
		)=>
		(
			ruleJvmFormalParameter
			(
				','
				ruleJvmFormalParameter
			)*
		)?
		'|'
	)
	ruleXExpression
;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression:
	'('
	ruleXExpression
	')'
;

// Rule XCasePart
ruleXCasePart:
	ruleJvmTypeReference
	?
	(
		'case'
		ruleXExpression
	)?
	(
		':'
		ruleXExpression
		    |
		','
	)
;

// Rule XExpressionOrVarDeclaration
ruleXExpressionOrVarDeclaration:
	(
		ruleXVariableDeclaration
		    |
		ruleXExpression
	)
;

// Rule XVariableDeclaration
ruleXVariableDeclaration:
	(
		'var'
		    |
		'val'
	)
	(
		(
			(ruleJvmTypeReference
			ruleValidID
			)=>
			ruleJvmTypeReference
			ruleValidID
		)
		    |
		ruleValidID
	)
	(
		'='
		ruleXExpression
	)?
;

// Rule JvmFormalParameter
ruleJvmFormalParameter:
	ruleJvmTypeReference
	?
	ruleValidID
;

// Rule FullJvmFormalParameter
ruleFullJvmFormalParameter:
	ruleJvmTypeReference
	ruleValidID
;

// Rule FeatureCallID
ruleFeatureCallID:
	(
		ruleValidID
		    |
		'extends'
		    |
		'static'
		    |
		'import'
		    |
		'extension'
	)
;

// Rule IdOrSuper
ruleIdOrSuper:
	(
		ruleFeatureCallID
		    |
		'super'
	)
;

// Rule XConstructorCall
ruleXConstructorCall:
	'new'
	ruleQualifiedName
	(
		(
			('<')=>
			'<'
		)
		ruleJvmArgumentTypeReference
		(
			','
			ruleJvmArgumentTypeReference
		)*
		'>'
	)?
	(
		(
			('('
			)=>
			'('
		)
		(
			(
				((
					ruleJvmFormalParameter
					(
						','
						ruleJvmFormalParameter
					)*
				)?
				'|'
				)=>
				ruleXShortClosure
			)
			    |
			ruleXExpression
			(
				','
				ruleXExpression
			)*
		)?
		')'
	)?
	(
		('['
		)=>
		ruleXClosure
	)?
;

// Rule XBooleanLiteral
ruleXBooleanLiteral:
	(
		'false'
		    |
		'true'
	)
;

// Rule XNullLiteral
ruleXNullLiteral:
	'null'
;

// Rule XNumberLiteral
ruleXNumberLiteral:
	ruleNumber
;

// Rule XStringLiteral
ruleXStringLiteral:
	RULE_STRING
;

// Rule XTypeLiteral
ruleXTypeLiteral:
	'typeof'
	'('
	ruleQualifiedName
	ruleArrayBrackets
	*
	')'
;

// Rule XCatchClause
ruleXCatchClause:
	(
		('catch')=>
		'catch'
	)
	'('
	ruleFullJvmFormalParameter
	')'
	ruleXExpression
;

// Rule QualifiedName
ruleQualifiedName:
	ruleValidID
	(
		(
			('.')=>
			'.'
		)
		ruleValidID
	)*
;

// Rule Number
ruleNumber:
	(
		RULE_HEX
		    |
		(
			RULE_INT
			    |
			RULE_DECIMAL
		)
		(
			'.'
			(
				RULE_INT
				    |
				RULE_DECIMAL
			)
		)?
	)
;

// Rule JvmTypeReference
ruleJvmTypeReference:
	(
		ruleJvmParameterizedTypeReference
		(
			(ruleArrayBrackets
			)=>
			ruleArrayBrackets
		)*
		    |
		ruleXFunctionTypeRef
	)
;

// Rule ArrayBrackets
ruleArrayBrackets:
	'['
	']'
;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef:
	(
		'('
		(
			ruleJvmTypeReference
			(
				','
				ruleJvmTypeReference
			)*
		)?
		')'
	)?
	'=>'
	ruleJvmTypeReference
;

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference:
	ruleQualifiedName
	(
		(
			('<')=>
			'<'
		)
		ruleJvmArgumentTypeReference
		(
			','
			ruleJvmArgumentTypeReference
		)*
		'>'
		(
			(
				('.'
				)=>
				'.'
			)
			ruleValidID
			(
				(
					('<')=>
					'<'
				)
				ruleJvmArgumentTypeReference
				(
					','
					ruleJvmArgumentTypeReference
				)*
				'>'
			)?
		)*
	)?
;

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference:
	(
		ruleJvmTypeReference
		    |
		ruleJvmWildcardTypeReference
	)
;

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference:
	'?'
	(
		ruleJvmUpperBound
		ruleJvmUpperBoundAnded
		*
		    |
		ruleJvmLowerBound
		ruleJvmLowerBoundAnded
		*
	)?
;

// Rule JvmUpperBound
ruleJvmUpperBound:
	'extends'
	ruleJvmTypeReference
;

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded:
	'&'
	ruleJvmTypeReference
;

// Rule JvmLowerBound
ruleJvmLowerBound:
	'super'
	ruleJvmTypeReference
;

// Rule JvmLowerBoundAnded
ruleJvmLowerBoundAnded:
	'&'
	ruleJvmTypeReference
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard:
	ruleQualifiedName
	'.'
	'*'
;

// Rule XImportDeclaration
ruleXImportDeclaration:
	'import'
	(
		'static'
		'extension'
		?
		ruleQualifiedNameInStaticImport
		(
			'*'
			    |
			ruleValidID
		)
		    |
		ruleQualifiedName
		    |
		ruleQualifiedNameWithWildcard
	)
	';'?
;

// Rule QualifiedNameInStaticImport
ruleQualifiedNameInStaticImport:
	(
		ruleValidID
		'.'
	)+
;

// Rule ParameterDirectionKind
ruleParameterDirectionKind:
	(
		'yIn'
		    |
		'yInout'
		    |
		'yInDeep'
	)
;

// Rule RunToCompletion
ruleRunToCompletion:
	(
		'yEffect'
		    |
		'yTransition'
		    |
		'yStatemachine'
		    |
		'yObserver'
	)
;

// Rule YAggregationKind
ruleYAggregationKind:
	(
		'yNone'
		    |
		'yShared'
		    |
		'yComposite'
	)
;

// Rule YVisibilityKind
ruleYVisibilityKind:
	(
		'yPublic'
		    |
		'yPrivate'
		    |
		'yProtected'
		    |
		'yPackage'
	)
;

RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'?|'\'' ('\\' .|~(('\\'|'\'')))* '\''?);

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/' {skip();};

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')? {skip();};

RULE_WS : (' '|'\t'|'\r'|'\n')+ {skip();};

RULE_ANY_OTHER : .;
