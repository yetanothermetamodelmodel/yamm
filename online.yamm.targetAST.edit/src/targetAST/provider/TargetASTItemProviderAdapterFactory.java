/**
 * Copyright (C) 2019 yamm.online, Ralf Buscherm√∂hle
 * 	
 * YAMM is made available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 * 
 * YAMM makes use of JScience - Java(TM) Tools and Libraries for the 
 * Advancement of Sciences: Copyright (C) 2006 - JScience (http://jscience.org/) 
 * All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * 
 * see LICENSE.txt
 * 
 */
package targetAST.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import targetAST.util.TargetASTAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class TargetASTItemProviderAdapterFactory extends TargetASTAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public TargetASTItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.TargetASTRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TargetASTRootItemProvider targetASTRootItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.TargetASTRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTargetASTRootAdapter() {
		if (targetASTRootItemProvider == null) {
			targetASTRootItemProvider = new TargetASTRootItemProvider(this);
		}

		return targetASTRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_BinaryExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_BinaryExpItemProvider t_BinaryExpItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_BinaryExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_BinaryExpAdapter() {
		if (t_BinaryExpItemProvider == null) {
			t_BinaryExpItemProvider = new T_BinaryExpItemProvider(this);
		}

		return t_BinaryExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_Get} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_GetItemProvider t_GetItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_Get}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_GetAdapter() {
		if (t_GetItemProvider == null) {
			t_GetItemProvider = new T_GetItemProvider(this);
		}

		return t_GetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_Set} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_SetItemProvider t_SetItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_Set}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_SetAdapter() {
		if (t_SetItemProvider == null) {
			t_SetItemProvider = new T_SetItemProvider(this);
		}

		return t_SetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_ExtCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_ExtCallItemProvider t_ExtCallItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_ExtCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_ExtCallAdapter() {
		if (t_ExtCallItemProvider == null) {
			t_ExtCallItemProvider = new T_ExtCallItemProvider(this);
		}

		return t_ExtCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_Literal} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_LiteralItemProvider t_LiteralItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_Literal}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_LiteralAdapter() {
		if (t_LiteralItemProvider == null) {
			t_LiteralItemProvider = new T_LiteralItemProvider(this);
		}

		return t_LiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_InstanceOfExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_InstanceOfExpItemProvider t_InstanceOfExpItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_InstanceOfExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_InstanceOfExpAdapter() {
		if (t_InstanceOfExpItemProvider == null) {
			t_InstanceOfExpItemProvider = new T_InstanceOfExpItemProvider(this);
		}

		return t_InstanceOfExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_UnaryExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_UnaryExpItemProvider t_UnaryExpItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_UnaryExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_UnaryExpAdapter() {
		if (t_UnaryExpItemProvider == null) {
			t_UnaryExpItemProvider = new T_UnaryExpItemProvider(this);
		}

		return t_UnaryExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_CreateInstanceExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_CreateInstanceExpItemProvider t_CreateInstanceExpItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_CreateInstanceExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_CreateInstanceExpAdapter() {
		if (t_CreateInstanceExpItemProvider == null) {
			t_CreateInstanceExpItemProvider = new T_CreateInstanceExpItemProvider(this);
		}

		return t_CreateInstanceExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_PrintExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_PrintExpItemProvider t_PrintExpItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_PrintExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_PrintExpAdapter() {
		if (t_PrintExpItemProvider == null) {
			t_PrintExpItemProvider = new T_PrintExpItemProvider(this);
		}

		return t_PrintExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_GetInstancesOfExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_GetInstancesOfExpItemProvider t_GetInstancesOfExpItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_GetInstancesOfExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_GetInstancesOfExpAdapter() {
		if (t_GetInstancesOfExpItemProvider == null) {
			t_GetInstancesOfExpItemProvider = new T_GetInstancesOfExpItemProvider(this);
		}

		return t_GetInstancesOfExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_SetReturn} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_SetReturnItemProvider t_SetReturnItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_SetReturn}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_SetReturnAdapter() {
		if (t_SetReturnItemProvider == null) {
			t_SetReturnItemProvider = new T_SetReturnItemProvider(this);
		}

		return t_SetReturnItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_ExtConstructor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_ExtConstructorItemProvider t_ExtConstructorItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_ExtConstructor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_ExtConstructorAdapter() {
		if (t_ExtConstructorItemProvider == null) {
			t_ExtConstructorItemProvider = new T_ExtConstructorItemProvider(this);
		}

		return t_ExtConstructorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_ExtType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_ExtTypeItemProvider t_ExtTypeItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_ExtType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_ExtTypeAdapter() {
		if (t_ExtTypeItemProvider == null) {
			t_ExtTypeItemProvider = new T_ExtTypeItemProvider(this);
		}

		return t_ExtTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_ExtAttrCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_ExtAttrCallItemProvider t_ExtAttrCallItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_ExtAttrCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_ExtAttrCallAdapter() {
		if (t_ExtAttrCallItemProvider == null) {
			t_ExtAttrCallItemProvider = new T_ExtAttrCallItemProvider(this);
		}

		return t_ExtAttrCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_OpCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_OpCallItemProvider t_OpCallItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_OpCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_OpCallAdapter() {
		if (t_OpCallItemProvider == null) {
			t_OpCallItemProvider = new T_OpCallItemProvider(this);
		}

		return t_OpCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_ColorDFA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_ColorDFAItemProvider t_ColorDFAItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_ColorDFA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_ColorDFAAdapter() {
		if (t_ColorDFAItemProvider == null) {
			t_ColorDFAItemProvider = new T_ColorDFAItemProvider(this);
		}

		return t_ColorDFAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_GetInstances} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_GetInstancesItemProvider t_GetInstancesItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_GetInstances}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_GetInstancesAdapter() {
		if (t_GetInstancesItemProvider == null) {
			t_GetInstancesItemProvider = new T_GetInstancesItemProvider(this);
		}

		return t_GetInstancesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_CountFinalStates} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_CountFinalStatesItemProvider t_CountFinalStatesItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_CountFinalStates}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_CountFinalStatesAdapter() {
		if (t_CountFinalStatesItemProvider == null) {
			t_CountFinalStatesItemProvider = new T_CountFinalStatesItemProvider(this);
		}

		return t_CountFinalStatesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_CountInitialStates} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_CountInitialStatesItemProvider t_CountInitialStatesItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_CountInitialStates}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_CountInitialStatesAdapter() {
		if (t_CountInitialStatesItemProvider == null) {
			t_CountInitialStatesItemProvider = new T_CountInitialStatesItemProvider(this);
		}

		return t_CountInitialStatesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_CountStates} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_CountStatesItemProvider t_CountStatesItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_CountStates}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_CountStatesAdapter() {
		if (t_CountStatesItemProvider == null) {
			t_CountStatesItemProvider = new T_CountStatesItemProvider(this);
		}

		return t_CountStatesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_SetAbsoluteNodePropability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_SetAbsoluteNodePropabilityItemProvider t_SetAbsoluteNodePropabilityItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_SetAbsoluteNodePropability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_SetAbsoluteNodePropabilityAdapter() {
		if (t_SetAbsoluteNodePropabilityItemProvider == null) {
			t_SetAbsoluteNodePropabilityItemProvider = new T_SetAbsoluteNodePropabilityItemProvider(this);
		}

		return t_SetAbsoluteNodePropabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_CountReachableStates} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_CountReachableStatesItemProvider t_CountReachableStatesItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_CountReachableStates}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_CountReachableStatesAdapter() {
		if (t_CountReachableStatesItemProvider == null) {
			t_CountReachableStatesItemProvider = new T_CountReachableStatesItemProvider(this);
		}

		return t_CountReachableStatesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_CountInValidTransitions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_CountInValidTransitionsItemProvider t_CountInValidTransitionsItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_CountInValidTransitions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_CountInValidTransitionsAdapter() {
		if (t_CountInValidTransitionsItemProvider == null) {
			t_CountInValidTransitionsItemProvider = new T_CountInValidTransitionsItemProvider(this);
		}

		return t_CountInValidTransitionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_SetPopulationSize} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_SetPopulationSizeItemProvider t_SetPopulationSizeItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_SetPopulationSize}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_SetPopulationSizeAdapter() {
		if (t_SetPopulationSizeItemProvider == null) {
			t_SetPopulationSizeItemProvider = new T_SetPopulationSizeItemProvider(this);
		}

		return t_SetPopulationSizeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_GetLayerInformation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_GetLayerInformationItemProvider t_GetLayerInformationItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_GetLayerInformation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_GetLayerInformationAdapter() {
		if (t_GetLayerInformationItemProvider == null) {
			t_GetLayerInformationItemProvider = new T_GetLayerInformationItemProvider(this);
		}

		return t_GetLayerInformationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_GetObjectManagement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_GetObjectManagementItemProvider t_GetObjectManagementItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_GetObjectManagement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_GetObjectManagementAdapter() {
		if (t_GetObjectManagementItemProvider == null) {
			t_GetObjectManagementItemProvider = new T_GetObjectManagementItemProvider(this);
		}

		return t_GetObjectManagementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_LoadModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_LoadModelItemProvider t_LoadModelItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_LoadModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_LoadModelAdapter()
	{
		if (t_LoadModelItemProvider == null) {
			t_LoadModelItemProvider = new T_LoadModelItemProvider(this);
		}

		return t_LoadModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_GetEnumLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_GetEnumLiteralItemProvider t_GetEnumLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_GetEnumLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_GetEnumLiteralAdapter()
	{
		if (t_GetEnumLiteralItemProvider == null) {
			t_GetEnumLiteralItemProvider = new T_GetEnumLiteralItemProvider(this);
		}

		return t_GetEnumLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_DesEventQueuePeek} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_DesEventQueuePeekItemProvider t_DesEventQueuePeekItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_DesEventQueuePeek}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_DesEventQueuePeekAdapter()
	{
		if (t_DesEventQueuePeekItemProvider == null) {
			t_DesEventQueuePeekItemProvider = new T_DesEventQueuePeekItemProvider(this);
		}

		return t_DesEventQueuePeekItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_DesEventQueueConsume} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_DesEventQueueConsumeItemProvider t_DesEventQueueConsumeItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_DesEventQueueConsume}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_DesEventQueueConsumeAdapter()
	{
		if (t_DesEventQueueConsumeItemProvider == null) {
			t_DesEventQueueConsumeItemProvider = new T_DesEventQueueConsumeItemProvider(this);
		}

		return t_DesEventQueueConsumeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_DesQueuePeek} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_DesQueuePeekItemProvider t_DesQueuePeekItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_DesQueuePeek}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_DesQueuePeekAdapter() {
		if (t_DesQueuePeekItemProvider == null) {
			t_DesQueuePeekItemProvider = new T_DesQueuePeekItemProvider(this);
		}

		return t_DesQueuePeekItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_DesQueueConsume} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_DesQueueConsumeItemProvider t_DesQueueConsumeItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_DesQueueConsume}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_DesQueueConsumeAdapter() {
		if (t_DesQueueConsumeItemProvider == null) {
			t_DesQueueConsumeItemProvider = new T_DesQueueConsumeItemProvider(this);
		}

		return t_DesQueueConsumeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_Type} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_TypeItemProvider t_TypeItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_Type}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_TypeAdapter() {
		if (t_TypeItemProvider == null) {
			t_TypeItemProvider = new T_TypeItemProvider(this);
		}

		return t_TypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_TimeStep} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_TimeStepItemProvider t_TimeStepItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_TimeStep}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_TimeStepAdapter() {
		if (t_TimeStepItemProvider == null) {
			t_TimeStepItemProvider = new T_TimeStepItemProvider(this);
		}

		return t_TimeStepItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_ObserverAddValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_ObserverAddValueItemProvider t_ObserverAddValueItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_ObserverAddValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_ObserverAddValueAdapter() {
		if (t_ObserverAddValueItemProvider == null) {
			t_ObserverAddValueItemProvider = new T_ObserverAddValueItemProvider(this);
		}

		return t_ObserverAddValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link targetAST.T_GetInstanceForStaticAccess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected T_GetInstanceForStaticAccessItemProvider t_GetInstanceForStaticAccessItemProvider;

	/**
	 * This creates an adapter for a {@link targetAST.T_GetInstanceForStaticAccess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createT_GetInstanceForStaticAccessAdapter() {
		if (t_GetInstanceForStaticAccessItemProvider == null) {
			t_GetInstanceForStaticAccessItemProvider = new T_GetInstanceForStaticAccessItemProvider(this);
		}

		return t_GetInstanceForStaticAccessItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (targetASTRootItemProvider != null) targetASTRootItemProvider.dispose();
		if (t_BinaryExpItemProvider != null) t_BinaryExpItemProvider.dispose();
		if (t_GetItemProvider != null) t_GetItemProvider.dispose();
		if (t_SetItemProvider != null) t_SetItemProvider.dispose();
		if (t_ExtCallItemProvider != null) t_ExtCallItemProvider.dispose();
		if (t_LiteralItemProvider != null) t_LiteralItemProvider.dispose();
		if (t_InstanceOfExpItemProvider != null) t_InstanceOfExpItemProvider.dispose();
		if (t_UnaryExpItemProvider != null) t_UnaryExpItemProvider.dispose();
		if (t_CreateInstanceExpItemProvider != null) t_CreateInstanceExpItemProvider.dispose();
		if (t_PrintExpItemProvider != null) t_PrintExpItemProvider.dispose();
		if (t_GetInstancesOfExpItemProvider != null) t_GetInstancesOfExpItemProvider.dispose();
		if (t_SetReturnItemProvider != null) t_SetReturnItemProvider.dispose();
		if (t_ExtConstructorItemProvider != null) t_ExtConstructorItemProvider.dispose();
		if (t_ExtTypeItemProvider != null) t_ExtTypeItemProvider.dispose();
		if (t_ExtAttrCallItemProvider != null) t_ExtAttrCallItemProvider.dispose();
		if (t_OpCallItemProvider != null) t_OpCallItemProvider.dispose();
		if (t_ColorDFAItemProvider != null) t_ColorDFAItemProvider.dispose();
		if (t_GetInstancesItemProvider != null) t_GetInstancesItemProvider.dispose();
		if (t_CountFinalStatesItemProvider != null) t_CountFinalStatesItemProvider.dispose();
		if (t_CountInitialStatesItemProvider != null) t_CountInitialStatesItemProvider.dispose();
		if (t_CountStatesItemProvider != null) t_CountStatesItemProvider.dispose();
		if (t_SetAbsoluteNodePropabilityItemProvider != null) t_SetAbsoluteNodePropabilityItemProvider.dispose();
		if (t_CountReachableStatesItemProvider != null) t_CountReachableStatesItemProvider.dispose();
		if (t_CountInValidTransitionsItemProvider != null) t_CountInValidTransitionsItemProvider.dispose();
		if (t_SetPopulationSizeItemProvider != null) t_SetPopulationSizeItemProvider.dispose();
		if (t_GetLayerInformationItemProvider != null) t_GetLayerInformationItemProvider.dispose();
		if (t_GetObjectManagementItemProvider != null) t_GetObjectManagementItemProvider.dispose();
		if (t_LoadModelItemProvider != null) t_LoadModelItemProvider.dispose();
		if (t_GetEnumLiteralItemProvider != null) t_GetEnumLiteralItemProvider.dispose();
		if (t_DesEventQueuePeekItemProvider != null) t_DesEventQueuePeekItemProvider.dispose();
		if (t_DesEventQueueConsumeItemProvider != null) t_DesEventQueueConsumeItemProvider.dispose();
		if (t_DesQueuePeekItemProvider != null) t_DesQueuePeekItemProvider.dispose();
		if (t_DesQueueConsumeItemProvider != null) t_DesQueueConsumeItemProvider.dispose();
		if (t_TypeItemProvider != null) t_TypeItemProvider.dispose();
		if (t_TimeStepItemProvider != null) t_TimeStepItemProvider.dispose();
		if (t_ObserverAddValueItemProvider != null) t_ObserverAddValueItemProvider.dispose();
		if (t_GetInstanceForStaticAccessItemProvider != null) t_GetInstanceForStaticAccessItemProvider.dispose();
	}

}
